{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAqBF,SAASC,cAAc,kBAC5CE,EAAoBH,SAASC,cAAc,iBAC3CG,EAAiBJ,SAASC,cAAc,mBAe9C,SAASI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBnB,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBnB,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IA7BhEjB,EAAQyB,iBAAiB,UAEzB,SAA0BC,GACxBA,EAAEC,iBAIF,IAHA,IAAIC,EAAaC,OAAO1B,EAAmB2B,OACrCC,EAAYF,OAAOzB,EAAkB0B,OACrCE,EAAcH,OAAOxB,EAAeyB,OACjCG,EAAS,EAAGA,GAAUD,EAAaC,GAAU,EACpD3B,EAAc2B,EAAQL,GACtBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst firstDelayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepDelayInputRef = document.querySelector('[name=\"step\"]');\nconst amountInputRef = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  let delayValue = Number(firstDelayInputRef.value);\n  const stepValue = Number(stepDelayInputRef.value);\n  const amountValue = Number(amountInputRef.value);\n  for (let number = 1; number <= amountValue; number += 1) {\n    createPromise(number, delayValue);\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInputRef","$ce04d3a99e08e73b$var$stepDelayInputRef","$ce04d3a99e08e73b$var$amountInputRef","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","amountValue","number"],"version":3,"file":"03-promises.8573e555.js.map"}